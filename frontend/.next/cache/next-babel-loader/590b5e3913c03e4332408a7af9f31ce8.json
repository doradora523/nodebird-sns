{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, takeLatest, delay, throttle } from \"redux-saga/effects\";\nimport shortId from \"shortid\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, ADD_COMMENT_REQUEST, ADD_POST_FAILURE, ADD_POST_SUCCESS, ADD_POST_REQUEST, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, generateDummyPost } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nfunction loadPostAPI(data) {\n  return axios.get(\"/api/post\", data);\n}\nfunction* loadPost(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: generateDummyPost(10)\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.delete(\"/api/post\", data);\n}\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPost);\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchLoadPosts), fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","all","fork","put","takeLatest","delay","throttle","shortId","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","ADD_COMMENT_REQUEST","ADD_POST_FAILURE","ADD_POST_SUCCESS","ADD_POST_REQUEST","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","generateDummyPost","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostAPI","data","get","loadPost","action","type","err","response","addPostAPI","post","addPost","id","generate","content","removePostAPI","delete","removePost","addCommentAPI","postId","addComment","watchLoadPosts","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"sources":["/Users/a123/Desktop/study-react/NodeBird-SNS/frontend/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  all,\n  fork,\n  put,\n  takeLatest,\n  delay,\n  throttle,\n} from \"redux-saga/effects\";\nimport shortId from \"shortid\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_REQUEST,\n  ADD_POST_FAILURE,\n  ADD_POST_SUCCESS,\n  ADD_POST_REQUEST,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_SUCCESS,\n  generateDummyPost,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/api/post\", data);\n}\nfunction* loadPost(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: generateDummyPost(10),\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      },\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id,\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(\"/api/post\", data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPost);\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchLoadPosts),\n    fork(watchAddPost),\n    fork(watchRemovePost),\n    fork(watchAddComment),\n  ]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}